<project name='CodeFormatter' basedir='..'>

	<property name='component' value='CodeFormatter' />
	<property name='system_id' value='### Must be set by Jenkins ###' />

	<property name='app.name' value='${component}' />
	<property name='inputDir' value='${basedir}/${app.name}/Documentation' />
	<property name='language' value='### Must be set by Jenkins ###' />

	<property environment='env' />
	<import file='${env.RE_ANTLIBRARY_HOME}/ant-lib.xml' />


	<target name='Component.CodeFormatter.init.custom' extensionOf='Component.init.custom'>

		<!-- - CMake generates makefiles here -->
		<property name='build.dir' value='${checkout_directory}${file.separator}${component}${file.separator}build' />

	</target>

	<target name='Component.CodeFormatter.prebuild' extensionOf='Component.prebuild'>

		<delete dir='${build.dir}' />
		<mkdir dir='${build.dir}' />
	</target>
	
	<!--
		Component (platform-independent)
	-->

	<target name='Component.CodeFormatter.execute' extensionOf='Component.execute'>

		<re-cmake-exec dir="${build.dir}">
			<arg line='-G &quot;${env.CMAKE_GENERATOR}&quot;' />
			<arg line='-DWOLFRAMKERNEL=${mathExe}' />  
			<arg line='-DBUILDNUMBER=${env.BUILD_NUMBER}' />
			<arg line='-DCMAKE_BUILD_TYPE=Release' />
			<arg value='${checkout_directory}/${component}' /> 
		</re-cmake-exec> 

		<re-cmake-exec dir="${build.dir}">
			<arg line='--build .' /> 
			<arg line='--target create-paclet-archive' /> 
			<arg line='--verbose' />
			<arg line='--config Release' />
		</re-cmake-exec> 
		
		<mkdir dir='${files_directory}/${component}' />
		<copy todir='${files_directory}/${component}'>
			<fileset dir='${build.dir}${file.separator}paclet${file.separator}${component}' />
		</copy>
		
	</target>

	<!--
			Paclet generation
	-->

	<target name='Paclet.CodeFormatter.init.custom' extensionOf='Paclet.init.custom'>

		<!--
			Prevent Paclet.clean from deleting files_directory,
			since CopyAndUnarchiveArtifact just put all the paclet
			files in there....
		-->

		<property name='keep.files_directory' value='true' />

	</target>

	<target name='Paclet.CodeFormatter.execute' extensionOf='Paclet.execute'>
		<mathematica exe="${mathExe}" fresh="true" quit="true"><![CDATA[

			Print["$Version: ", $Version];
			Print["$InstallationDirectory: ", $InstallationDirectory];

			Unset[$MessagePrePrint];
			Needs["PacletManager`"];

			src = FileNameJoin[{AntProperty["files_directory"], "CodeFormatter"}];
			dest = FileNameJoin[AntProperty["output_directory"]];
			PackPaclet[src, dest];

			SetDirectory[dest]
			If [TrueQ[FileExistsQ[FileNames["CodeFormatter*.paclet"][[1]]]],
				Print[FileNames["CodeFormatter*.paclet"][[1]] " ... OK"],
				AntFail["Paclet not produced" ]];

		]]></mathematica>

	</target>

</project>
